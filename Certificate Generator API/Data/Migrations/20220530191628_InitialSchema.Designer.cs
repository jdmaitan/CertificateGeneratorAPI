// <auto-generated />
using System;
using CertificateGeneratorAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CertificateGeneratorAPI.Data.Migrations
{
    [DbContext(typeof(CertificateDbContext))]
    [Migration("20220530191628_InitialSchema")]
    partial class InitialSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("CertificateGeneratorAPI.Data.Certificate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpeditionDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("HolderID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("HolderID");

                    b.HasIndex("TypeID");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("CertificateGeneratorAPI.Data.CertificateType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("ValidityMonths")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("CertificateTypes");
                });

            modelBuilder.Entity("CertificateGeneratorAPI.Data.Holder", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BusinessName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RIF")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Holders");
                });

            modelBuilder.Entity("CertificateGeneratorAPI.Data.Certificate", b =>
                {
                    b.HasOne("CertificateGeneratorAPI.Data.Holder", "Holder")
                        .WithMany("Certificates")
                        .HasForeignKey("HolderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CertificateGeneratorAPI.Data.CertificateType", "Type")
                        .WithMany("Certificates")
                        .HasForeignKey("TypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Holder");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("CertificateGeneratorAPI.Data.CertificateType", b =>
                {
                    b.Navigation("Certificates");
                });

            modelBuilder.Entity("CertificateGeneratorAPI.Data.Holder", b =>
                {
                    b.Navigation("Certificates");
                });
#pragma warning restore 612, 618
        }
    }
}
